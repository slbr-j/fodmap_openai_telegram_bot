from aiogram import Router, types
from aiogram.filters import Command
from aiogram.enums import ChatAction
from keyboards import get_main_menu, get_product_categories_keyboard, get_products_keyboard
from data_loader import CATEGORIES, CATEGORY_NAME_TO_ID, CATEGORY_ID_TO_NAME, PRODUCTS, get_products_by_category
from assistants_api import ask_assistant

router = Router()

# –°—Ç–∞—Ä—Ç / –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
@router.message(Command("start"))
async def cmd_start(message: types.Message):
    # –ü–æ–∫–∞–∑—É—î–º–æ —â–æ "–¥—Ä—É–∫—É—î"
    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)
    await message.answer(
        "–ü—Ä–∏–≤—ñ—Ç! –Ø FODMAP –∞—Å–∏—Å—Ç–µ–Ω—Ç üë©üèª‚Äç‚öïÔ∏è\n\n–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é:",
        reply_markup=get_main_menu()
    )

@router.message(lambda msg: msg.text == "üìã –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é")
async def cmd_menu(message: types.Message):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é:", reply_markup=get_main_menu())

# –ó–ê–ü–ò–° –ù–ê –ö–û–ù–°–£–õ–¨–¢–ê–¶–Ü–Æ
@router.message(lambda msg: msg.text == "üìÖ –ó–∞–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é")
async def cmd_consultation(message: types.Message):
    # –ü–æ–∫–∞–∑—É—î–º–æ —â–æ "–¥—Ä—É–∫—É—î"
    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)
    await message.answer(
        "–î–∞—Ä º—è –í–æ–ª–æ–¥–∏–º–∏—Ä—ñ–≤–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç—É—î –≤ –∫–ª—ñ–Ω—ñ—Ü—ñ Vita Medical.\n\n"
        "–ó–∞–ø–∏—Å —á–µ—Ä–µ–∑ —Å–∞–π—Ç: https://vitamedical.com.ua/\n"
        "–ê–±–æ —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –∫–ª—ñ–Ω—ñ–∫–∏: https://t.me/vitamedicalBot\n\n"
        "–ù–µ –∫–æ–Ω—Å—É–ª—å—Ç—É—é –≤ Direct! Google 24/7 ‚Äî go! üòâ"
    )

# –ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.message(lambda msg: msg.text == "üîô –ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
async def cmd_back_to_main_menu(message: types.Message):
    await message.answer(
        "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é üëá",
        reply_markup=get_main_menu()
    )

# –ö–ê–¢–ï–ì–û–†–Ü–á
@router.message(lambda msg: msg.text == "üçé –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø—Ä–æ–¥—É–∫—Ç—ñ–≤")
async def cmd_categories(message: types.Message):
    await message.answer(
        "–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ üëá",
        reply_markup=get_product_categories_keyboard()
    )

# –û–±—Ä–æ–±–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∫–Ω–æ–ø–∫–∏
@router.message(lambda msg: msg.text in CATEGORY_NAME_TO_ID.keys())
async def ask_category(message: types.Message):
    category_id = CATEGORY_NAME_TO_ID[message.text]
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä, —â–æ –±–æ—Ç "–¥—Ä—É–∫—É—î"
    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)

    # –ì–µ–Ω–µ—Ä—É—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ —Ü—ñ—î—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    products_keyboard = get_products_keyboard(category_id)

    if products_keyboard:
        await message.answer(
            text=f"–û–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–¥—É–∫—Ç –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó {message.text}:",
            reply_markup=products_keyboard
        )
    else:
        await message.answer("–ù–∞–∂–∞–ª—å, –ø—Ä–æ–¥—É–∫—Ç–∏ —Ü—ñ—î—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")

@router.message(lambda msg: msg.text == "üîô –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
async def back_to_categories(message: types.Message):
    await message.answer(
        "–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ üëá",
        reply_markup=get_product_categories_keyboard()
    )

@router.message(lambda msg: msg.text in [product["name"] for product in PRODUCTS])
async def show_product_info(message: types.Message):
    # –ü–æ—à—É–∫ –ø—Ä–æ–¥—É–∫—Ç—É –∑–∞ —ñ–º'—è–º
    product = next((p for p in PRODUCTS if p["name"] == message.text), None)

    if not product:
        await message.answer("–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ üò¢")
        return

    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)

    # –§–æ—Ä–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø—Ä–æ –ø—Ä–æ–¥—É–∫—Ç
    text = (
        f"{product['name']}\n"
        f"–°—Ç–∞—Ç—É—Å: {product['status']}\n\n"
        f"üü¢ –ë–µ–∑–ø–µ—á–Ω–∞ –¥–æ–∑–∞: {product['doses']['low']}\n"
        f"üü° –ü–æ–º—ñ—Ä–Ω–∞ –¥–æ–∑–∞: {product['doses']['moderate']}\n"
        f"üî¥ –ù–µ–±–µ–∑–ø–µ—á–Ω–∞ –¥–æ–∑–∞: {product['doses']['high']}\n\n"
        f"FODMAP —Ä–µ—á–æ–≤–∏–Ω–∏:\n"
        f"- –§—Ä—É–∫—Ç–æ–∑–∞: {product['fodmaps'].get('fructose', '‚ùì')}\n"
        f"- –õ–∞–∫—Ç–æ–∑–∞: {product['fodmaps'].get('lactose', '‚ùì')}\n"
        f"- –ú–∞–Ω—ñ—Ç–æ–ª: {product['fodmaps'].get('mannitol', '‚ùì')}\n"
        f"- –°–æ—Ä–±—ñ—Ç–æ–ª: {product['fodmaps'].get('sorbitol', '‚ùì')}\n"
        f"- –ì–ó–ö (GOS): {product['fodmaps'].get('gos', '‚ùì')}\n"
        f"- –§—Ä—É–∫—Ç–∞–Ω–∏: {product['fodmaps'].get('fructans', '‚ùì')}\n\n"
        f"{product.get('comment', '')}\n\n"
        f"üëâ –õ—ñ–∫—É—é, –∞ –Ω–µ –ª—è–∫–∞—é ü´Ç"
    )

    await message.answer(text)

# –ü–û–®–£–ö –ü–†–û–î–£–ö–¢–£
@router.message(lambda msg: msg.text == "ü•¶ –ü—Ä–æ–¥—É–∫—Ç–∏ (–ø–æ—à—É–∫)")
async def cmd_product_search(message: types.Message):
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –ø—Ä–æ–¥—É–∫—Ç—É –¥–ª—è –ø–æ—à—É–∫—É üßê")

@router.message()
async def ask_product_info(message: types.Message):
    user_input = message.text.strip()

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –ø—Ä–æ–¥—É–∫—Ç —É PRODUCTS
    product = next((p for p in PRODUCTS if p["name"].lower() == user_input.lower()), None)
    
    if product:
        return await show_product_info(message)  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–∂–µ –≥–æ—Ç–æ–≤–∏–π —Ö–µ–Ω–¥–ª–µ—Ä

    # –Ø–∫—â–æ –ø—Ä–æ–¥—É–∫—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π, –π–¥–µ–º–æ –¥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    msg = await message.reply("üëÄ –®—É–∫–∞—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é...")

    await message.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)

    query = f"–†–æ–∑–∫–∞–∂–∏ –ø—Ä–æ –ø—Ä–æ–¥—É–∫—Ç '{user_input}' –∑–≥—ñ–¥–Ω–æ –¥—ñ—î—Ç–∏ Low-FODMAP. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –¥–∞–Ω—ñ –∑ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ–≥–æ —Ñ–∞–π–ª—É."

    response = await ask_assistant(query)
    
    await msg.delete()
    await message.answer(response)
